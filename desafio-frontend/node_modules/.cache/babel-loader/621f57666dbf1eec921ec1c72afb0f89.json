{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desenvolvimento Web\\\\Github\\\\SLT--cowala\\\\desafio-frontend\\\\src\\\\Components\\\\Input.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  _s();\n\n  let {\n    inputLabel,\n    inputNumber,\n    inputInfo,\n    inputValue,\n    setInputValue\n  } = _ref;\n  const [isInputFocused, setIsInputFocused] = useState(false);\n\n  const handleInputNumber = value => {\n    if (!inputNumber) return false;\n\n    if (inputNumber === \"phone-number\" && isInputFocused) {\n      handlePhoneNumber(value);\n    } else if (inputNumber === \"ip-address\" && isInputFocused) {\n      handleIpAddress(value);\n    }\n  };\n\n  const handlePhoneNumber = value => {\n    console.log(value);\n  };\n\n  const handleIpAddress = value => {\n    const ipNumbers = value.split(\"\");\n\n    if (ipNumbers.length % 3 === 0 && ipNumbers.length <= 9) {\n      ipNumbers.push(\".\");\n    }\n\n    console.log(ipNumbers.join(\"\"));\n    setInputValue(ipNumbers.join(\"\"));\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: inputInfo,\n      children: inputLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      type: \"text\",\n      name: inputInfo,\n      id: inputInfo,\n      value: inputValue,\n      onChange: e => handleInputNumber(e.target.value) || setInputValue(e.target.value),\n      onFocus: () => setIsInputFocused(true),\n      onBlur: () => setIsInputFocused(false),\n      onKeyPress: e => !/[0-9]/.test(e.key) && inputNumber && e.preventDefault()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"HmmdbZlMHf18M13F9A/veOL291I=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/Desenvolvimento Web/Github/SLT--cowala/desafio-frontend/src/Components/Input.jsx"],"names":["useState","Input","inputLabel","inputNumber","inputInfo","inputValue","setInputValue","isInputFocused","setIsInputFocused","handleInputNumber","value","handlePhoneNumber","handleIpAddress","console","log","ipNumbers","split","length","push","join","e","target","test","key","preventDefault"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAG,QAAqE;AAAA;;AAAA,MAApE;AAACC,IAAAA,UAAD;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA,SAA1B;AAAqCC,IAAAA,UAArC;AAAiDC,IAAAA;AAAjD,GAAoE;AACjF,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMS,iBAAiB,GAAGC,KAAK,IAAI;AACjC,QAAI,CAACP,WAAL,EAAkB,OAAO,KAAP;;AAElB,QAAIA,WAAW,KAAK,cAAhB,IAAkCI,cAAtC,EAAsD;AACpDI,MAAAA,iBAAiB,CAACD,KAAD,CAAjB;AACD,KAFD,MAEO,IAAIP,WAAW,KAAK,YAAhB,IAAgCI,cAApC,EAAoD;AACzDK,MAAAA,eAAe,CAACF,KAAD,CAAf;AACD;AAEF,GATD;;AAWA,QAAMC,iBAAiB,GAAGD,KAAK,IAAI;AACjCG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAED,GAHD;;AAKA,QAAME,eAAe,GAAGF,KAAK,IAAI;AAC/B,UAAMK,SAAS,GAAGL,KAAK,CAACM,KAAN,CAAY,EAAZ,CAAlB;;AAEA,QAAID,SAAS,CAACE,MAAV,GAAmB,CAAnB,KAAyB,CAAzB,IAA8BF,SAAS,CAACE,MAAV,IAAoB,CAAtD,EAAyD;AACvDF,MAAAA,SAAS,CAACG,IAAV,CAAe,GAAf;AACD;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACI,IAAV,CAAe,EAAf,CAAZ;AACAb,IAAAA,aAAa,CAACS,SAAS,CAACI,IAAV,CAAe,EAAf,CAAD,CAAb;AAEA,WAAO,KAAP;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEf,SAAhB;AAAA,gBAA4BF;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAEE,SAHR;AAIE,MAAA,EAAE,EAAEA,SAJN;AAKE,MAAA,KAAK,EAAEC,UALT;AAME,MAAA,QAAQ,EAAEe,CAAC,IAAIX,iBAAiB,CAACW,CAAC,CAACC,MAAF,CAASX,KAAV,CAAjB,IAAqCJ,aAAa,CAACc,CAAC,CAACC,MAAF,CAASX,KAAV,CANnE;AAOE,MAAA,OAAO,EAAE,MAAMF,iBAAiB,CAAC,IAAD,CAPlC;AAQE,MAAA,MAAM,EAAE,MAAMA,iBAAiB,CAAC,KAAD,CARjC;AASE,MAAA,UAAU,EAAGY,CAAD,IAAO,CAAC,QAAQE,IAAR,CAAaF,CAAC,CAACG,GAAf,CAAD,IAAwBpB,WAAxB,IAAuCiB,CAAC,CAACI,cAAF;AAT5D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/CD;;GAAMvB,K;;KAAAA,K;AAiDN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Input = ({inputLabel, inputNumber, inputInfo, inputValue, setInputValue}) => {\r\n  const [isInputFocused, setIsInputFocused] = useState(false);\r\n  \r\n  const handleInputNumber = value => {\r\n    if (!inputNumber) return false;\r\n\r\n    if (inputNumber === \"phone-number\" && isInputFocused) {\r\n      handlePhoneNumber(value);\r\n    } else if (inputNumber === \"ip-address\" && isInputFocused) {\r\n      handleIpAddress(value);\r\n    }\r\n\r\n  }\r\n\r\n  const handlePhoneNumber = value => {\r\n    console.log(value);\r\n\r\n  }\r\n\r\n  const handleIpAddress = value => {\r\n    const ipNumbers = value.split(\"\");\r\n\r\n    if (ipNumbers.length % 3 === 0 && ipNumbers.length <= 9) {\r\n      ipNumbers.push(\".\");\r\n    }\r\n    console.log(ipNumbers.join(\"\"));\r\n    setInputValue(ipNumbers.join(\"\"));\r\n\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <div className=\"input\">\r\n      <label htmlFor={inputInfo}>{inputLabel}</label>\r\n      <input\r\n        className=\"input-field\"\r\n        type=\"text\"\r\n        name={inputInfo}\r\n        id={inputInfo}\r\n        value={inputValue}\r\n        onChange={e => handleInputNumber(e.target.value) || setInputValue(e.target.value)}\r\n        onFocus={() => setIsInputFocused(true)}\r\n        onBlur={() => setIsInputFocused(false)}\r\n        onKeyPress={(e) => !/[0-9]/.test(e.key) && inputNumber && e.preventDefault()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}